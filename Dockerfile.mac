# Use the official Node.js 18.17.0 runtime as a parent image
#FROM node:18.17.0

# Use the official Node.js 16 runtime as a parent image
FROM --platform=linux/amd64 node:18-buster-slim

# Set the working directory in the container to /app
WORKDIR /app

# Copy the rest of the application code to the working directory
COPY . .

# TensorFlow C 라이브러리 설치
RUN apt-get update && apt-get install -y curl
RUN curl -L "https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-2.5.0.tar.gz" | tar -C /usr/local -xz
RUN ldconfig

# Python 설치
RUN apt-get update && apt-get install -y python3 python3-pip

# Remove package-lock.json
RUN rm -rf package-lock.json node_modules

# Install the project dependencies
RUN npm install

# Automatically fix detected vulnerabilities
# RUN npm audit fix

# Copy the build output to the working directory
#COPY .output ./

# Build the application
RUN npm run build

# Make port 3000 available to the outside of the docker container
EXPOSE 3000

# Run the application
CMD [ "node", "./.output/server/index.mjs" ]

# docker build -f Dockerfile.windows -t stock.potatomap:1.0.0 .